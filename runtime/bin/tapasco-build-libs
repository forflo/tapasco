#!/usr/bin/python
import argparse
import sys
import subprocess
from   socket import gethostname
import os

tools        = ['tapasco-debug', 'tapasco-benchmark']
default_cmd  = 'mkdir -p {0} && cd {0} && cmake {1} {2} && make -j install DESTDIR={0}/install'
tlkm_cmd     = 'cd {0} && make -j {1}'

parser = argparse.ArgumentParser()
parser.add_argument('--mode', help='build mode (default: %(default)s)', default='release', choices=['clean', 'release', 'debug', 'driver_debug'])
parser.add_argument('--rebuild', help='force rebuild libs (default: %(default)s)', action='store_true')
parser.add_argument('--shared', help='build shared library instead of static', action='store_true')
parser.add_argument('--package', help='build installation packages', action='store_true')
parser.add_argument('--skip_driver', help='do not build the driver', action='store_true')
parser.add_argument('--skip_runtime', help='do not build the tapasco runtime', action='store_true')
args = parser.parse_args()

clean        = args.mode == 'clean'
debug        = args.mode == 'debug' or args.mode == 'driver_debug'
driver_debug = args.mode == 'driver_debug'
debug_flags  = '-DCMAKE_BUILD_TYPE=Debug' if debug else '-DCMAKE_BUILD_TYPE=Release'

shared_flags = '-DBUILD_SHARED_LIBS:BOOL={}'.format('ON' if args.shared else 'OFF')

print('Build mode: {}'.format(args.mode))

mdir = '{}/bin'.format(os.environ['TAPASCO_HOME_RUNTIME'])
mdir = '{}/kernel'.format(os.environ['TAPASCO_HOME_RUNTIME'])
pdir = '{}/platform/build'.format(os.environ['TAPASCO_HOME_RUNTIME'])
adir = '{}/arch/build'.format(os.environ['TAPASCO_HOME_RUNTIME'])
tdir = '{}/arch/tests/build'.format(os.environ['TAPASCO_HOME_RUNTIME'])
ldir = '{}/lib'.format(os.environ['TAPASCO_HOME_RUNTIME'])
bdir   = '{}/build'.format(os.environ['TAPASCO_WORK_DIR'])

if clean or args.rebuild:
    subprocess.call(['rm -rf %s' % bdir], shell=True)
    subprocess.call(['cd %s && make clean' % mdir], shell=True)

if not clean:
    if debug:
        print('Building debug mode libraries...')
    else:
        print('Building release mode libraries...')

    if 'LINUX_HOME' in os.environ:
        subprocess.call(['make -C ' + os.environ['LINUX_HOME'] + ' scripts'], shell=True)

    if not args.skip_driver:
        ret = subprocess.call([tlkm_cmd.format(mdir, '' if driver_debug else 'release')], shell=True)
        if ret:
            print('Driver build failed!')
            sys.exit(ret)
    if not args.skip_runtime:
        cmd = default_cmd.format(bdir, " ".join([debug_flags, shared_flags]), os.environ['TAPASCO_HOME_RUNTIME'])
        ret = subprocess.call([cmd], shell=True)
        if ret:
            print('Tapasco build failed!')
            sys.exit(ret)
    if args.package:
        ret = subprocess.call("cd {0} && make -j package".format(bdir), shell=True)
        if ret:
            print('Tapasco packaging failed!')
            sys.exit(ret)
