#!/usr/bin/python
import argparse
import os
import sys
import subprocess
from   socket import gethostname

parser = argparse.ArgumentParser()
parser.add_argument('bitstream', help='.bit file to load')
parser.add_argument('--reload-driver', help='reload driver, if loaded (default: %(default)s)', action='store_true')
parser.add_argument('--verbose', help='verbose output (default: %(default)s)', action='store_true')
parser.add_argument('--mode', help='select the operation to be performed (default: %(default)s)', default='normal', choices=['normal', 'program', 'hotplug'])
args = parser.parse_args()

if not os.path.exists(args.bitstream):
	sys.exit('ERROR: {} could not be opened'.format(args.bitstream))

if not 'TAPASCO_PLATFORM' in os.environ:
	print('Environment variable TAPASCO_PLATFORM is not set, guessing Platform ...')
	if gethostname() in ['zed', 'zedboard', 'zc706', 'zynq', 'pynq']:
		os.environ['TAPASCO_PLATFORM'] = 'zynq'
	else:
		os.environ['TAPASCO_PLATFORM'] = 'pcie'

if args.verbose:
	print('Bitstream: {}'.format(args.bitstream))
	print('Reload Driver: {}'.format(str(args.reload_driver)))
	print('Platform: {}'.format(os.environ['TAPASCO_PLATFORM']))

path = 'module/'
reld = '-d' if args.reload_driver else ''
verb = '-v' if args.verbose else ''
program = '-p' if args.mode == 'normal' or args.mode == 'program' else ''
hotplug = '-h' if args.mode == 'normal' or args.mode == 'hotplug' else ''
cmd = '$TAPASCO_HOME_RUNTIME/platform/$TAPASCO_PLATFORM/{0}bit_reload.sh {1} {2} {3} {4} {5}'.format(path, verb, reld, hotplug, program, args.bitstream)
subprocess.call([cmd], shell=True)
