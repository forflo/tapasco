before_script:
  - echo "Setup done"

after_script:
  - echo "Done with the work"

stages:
  - build_tests

build_sbt_tapasco_ubuntu_16_04:
  stage: build_tests
  image: ubuntu:xenial
  tags:
    - CAD
    - High
  script:
    - apt-get -y update && apt-get -y install unzip git zip findutils curl
    - curl -s "https://get.sdkman.io" | bash
    - source "/root/.sdkman/bin/sdkman-init.sh"
    - sdk install java
    - sdk install sbt
    - sbt version
    - source setup.sh
    - sbt assembly

build_sbt_tapasco_ubuntu_18_04:
  stage: build_tests
  image: ubuntu:cosmic
  tags:
    - CAD
    - High
  script:
    - apt-get -y update && apt-get -y install unzip git zip findutils curl
    - curl -s "https://get.sdkman.io" | bash
    - source "/root/.sdkman/bin/sdkman-init.sh"
    - sdk install java
    - sdk install sbt
    - sbt version
    - source setup.sh
    - sbt assembly

build_sbt_tapasco_fedora_27:
  stage: build_tests
  image: fedora:27
  tags:
    - CAD
    - High
  script:
    - dnf -y install which unzip git zip findutils
    - curl -s "https://get.sdkman.io" | bash
    - source "/root/.sdkman/bin/sdkman-init.sh"
    - sdk install java
    - sdk install sbt
    - sbt version
    - source setup.sh
    - sbt assembly

build_sbt_tapasco_fedora_28:
  stage: build_tests
  image: fedora:28
  tags:
    - CAD
    - High
  script:
    - dnf -y install which unzip git zip findutils
    - curl -s "https://get.sdkman.io" | bash
    - source "/root/.sdkman/bin/sdkman-init.sh"
    - sdk install java
    - sdk install sbt
    - sbt version
    - source setup.sh
    - sbt assembly

build_kernel_ubuntu_16_04:
  stage: build_tests
  image: ubuntu:xenial
  tags:
    - CAD
    - Normal
  script:
    - apt-get -y update && apt-get -y install build-essential linux-headers-generic python libelf-dev
    - source setup.sh
    - for d in `ls /lib/modules`; do echo "Building for linux headers in $d"; pushd tlkm; make LINUX_HOME="/lib/modules/$d/build" clean && make LINUX_HOME=/lib/modules/$d/build -j release; popd; done

build_kernel_ubuntu_18_04:
  stage: build_tests
  image: ubuntu:cosmic
  tags:
    - CAD
    - Normal
  script:
    - apt-get -y update && apt-get -y install build-essential linux-headers-generic python libelf-dev
    - source setup.sh
    - for d in `ls /lib/modules`; do echo "Building for linux headers in $d"; pushd tlkm; make LINUX_HOME="/lib/modules/$d/build" clean && make LINUX_HOME=/lib/modules/$d/build -j release; popd; done

build_kernel_fedora_27:
  stage: build_tests
  image: fedora:27
  tags:
    - CAD
    - Normal
  script:
    - dnf -y install kernel-devel make gcc gcc-c++ elfutils-libelf-devel
    - source setup.sh
    - for d in `ls /usr/src/kernels/`; do echo "Building for linux headers in $d"; pushd tlkm; make LINUX_HOME="/usr/src/kernels/$d" clean && make LINUX_HOME=/usr/src/kernels/$d -j release; popd; done

build_kernel_fedora_28:
  stage: build_tests
  image: fedora:28
  tags:
    - CAD
    - Normal
  script:
    - dnf -y install kernel-devel make gcc gcc-c++ elfutils-libelf-devel
    - source setup.sh
    - for d in `ls /usr/src/kernels/`; do echo "Building for linux headers in $d"; pushd tlkm; make LINUX_HOME="/usr/src/kernels/$d" clean && make LINUX_HOME=/usr/src/kernels/$d -j release; popd; done

build_kernel_ubuntu_16_04_debug:
  stage: build_tests
  image: ubuntu:xenial
  tags:
    - CAD
    - Normal
  script:
    - apt-get -y update && apt-get -y install build-essential linux-headers-generic python libelf-dev
    - source setup.sh
    - for d in `ls /lib/modules`; do echo "Building for linux headers in $d"; pushd tlkm; make LINUX_HOME="/lib/modules/$d/build" clean && make LINUX_HOME=/lib/modules/$d/build -j; popd; done

build_kernel_ubuntu_18_04_debug:
  stage: build_tests
  image: ubuntu:cosmic
  tags:
    - CAD
    - Normal
  script:
    - apt-get -y update && apt-get -y install build-essential linux-headers-generic python libelf-dev
    - source setup.sh
    - for d in `ls /lib/modules`; do echo "Building for linux headers in $d"; pushd tlkm; make LINUX_HOME="/lib/modules/$d/build" clean && make LINUX_HOME=/lib/modules/$d/build -j; popd; done

build_kernel_fedora_27_debug:
  stage: build_tests
  image: fedora:27
  tags:
    - CAD
    - Normal
  script:
    - dnf -y install kernel-devel make gcc gcc-c++ elfutils-libelf-devel
    - source setup.sh
    - for d in `ls /usr/src/kernels/`; do echo "Building for linux headers in $d"; pushd tlkm; make LINUX_HOME="/usr/src/kernels/$d" clean && make LINUX_HOME=/usr/src/kernels/$d -j; popd; done

build_kernel_fedora_28_debug:
  stage: build_tests
  image: fedora:28
  tags:
    - CAD
    - Normal
  script:
    - dnf -y install kernel-devel make gcc gcc-c++ elfutils-libelf-devel
    - source setup.sh
    - for d in `ls /usr/src/kernels/`; do echo "Building for linux headers in $d"; pushd tlkm; make LINUX_HOME="/usr/src/kernels/$d" clean && make LINUX_HOME=/usr/src/kernels/$d -j; popd; done

build_tapasco_ubuntu_16_04:
  stage: build_tests
  image: ubuntu:xenial
  tags:
    - CAD
    - Normal
  script:
    - apt-get -y update && apt-get -y install build-essential linux-headers-generic python cmake libelf-dev libncurses-dev git
    - source setup.sh
    - tapasco-build-libs --mode=release --skip_driver

build_tapasco_ubuntu_18_04:
  stage: build_tests
  image: ubuntu:cosmic
  tags:
    - CAD
    - Normal
  script:
    - apt-get -y update && apt-get -y install build-essential linux-headers-generic python cmake libelf-dev libncurses-dev git
    - source setup.sh
    - tapasco-build-libs --mode=release --skip_driver

build_tapasco_fedora_27:
  stage: build_tests
  image: fedora:27
  tags:
    - CAD
    - Normal
  script:
    - dnf -y install kernel-devel make gcc gcc-c++ elfutils-libelf-devel cmake ncurses-devel python libatomic git
    - source setup.sh
    - tapasco-build-libs --mode=release --skip_driver

build_tapasco_fedora_28:
  stage: build_tests
  image: fedora:28
  tags:
    - CAD
    - Normal
  script:
    - dnf -y install kernel-devel make gcc gcc-c++ elfutils-libelf-devel cmake ncurses-devel python libatomic git
    - source setup.sh
    - tapasco-build-libs --mode=release --skip_driver

build_tapasco_ubuntu_16_04_debug:
  stage: build_tests
  image: ubuntu:xenial
  tags:
    - CAD
    - Normal
  script:
    - apt-get -y update && apt-get -y install build-essential linux-headers-generic python cmake libelf-dev libncurses-dev git
    - source setup.sh
    - tapasco-build-libs --mode=debug --skip_driver

build_tapasco_ubuntu_18_04_debug:
  stage: build_tests
  image: ubuntu:cosmic
  tags:
    - CAD
    - Normal
  script:
    - apt-get -y update && apt-get -y install build-essential linux-headers-generic python cmake libelf-dev libncurses-dev git
    - source setup.sh
    - tapasco-build-libs --mode=debug --skip_driver

build_tapasco_fedora_27_debug:
  stage: build_tests
  image: fedora:27
  tags:
    - CAD
    - Normal
  script:
    - dnf -y install kernel-devel make gcc gcc-c++ elfutils-libelf-devel cmake ncurses-devel python libatomic git
    - source setup.sh
    - tapasco-build-libs --mode=debug --skip_driver

build_tapasco_fedora_28_debug:
  stage: build_tests
  image: fedora:28
  tags:
    - CAD
    - Normal
  script:
    - dnf -y install kernel-devel make gcc gcc-c++ elfutils-libelf-devel cmake ncurses-devel python libatomic git
    - source setup.sh
    - tapasco-build-libs --mode=debug --skip_driver

crosscompiling_tapasco:
  stage: build_tests
  image: fedora:28
  tags:
    - CAD
    - Normal
  script:
    - dnf -y install kernel-devel make gcc gcc-c++ elfutils-libelf-devel cmake ncurses-devel python libatomic git
    - export PATH="/opt/cad/xilinx/vivado/SDK/2018.2/gnu/aarch32/lin/gcc-arm-linux-gnueabi/bin:$PATH"
    - source setup.sh
    - tapasco-build-libs --skip_driver --target zynq

build_tapasco_clang:
  stage: build_tests
  image: fedora:28
  tags:
    - CAD
    - Normal
  script:
    - dnf -y install kernel-devel make gcc gcc-c++ elfutils-libelf-devel cmake ncurses-devel python libatomic git clang
    - source setup.sh
    - tapasco-build-libs --skip_driver --target clang
